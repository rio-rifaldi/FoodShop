import { ParamMetadata } from "type-graphql/dist/metadata/definitions/param-metadata";
import { TypeValueThunk, TypeOptions } from "type-graphql/dist/decorators/types";
import { Middleware } from "type-graphql/dist/interfaces/Middleware";
import { Complexity } from "type-graphql/dist/interfaces/index";
import { DirectiveMetadata } from "type-graphql/dist/metadata/definitions/directive-metadata";
import { ExtensionsMetadata } from "type-graphql/dist/metadata/definitions/extensions-metadata";
export interface FieldMetadata {
    target: Function;
    schemaName: string;
    name: string;
    getType: TypeValueThunk;
    typeOptions: TypeOptions;
    description: string | undefined;
    deprecationReason: string | undefined;
    complexity: Complexity | undefined;
    params?: ParamMetadata[];
    roles?: any[];
    middlewares?: Array<Middleware<any>>;
    directives?: DirectiveMetadata[];
    extensions?: ExtensionsMetadata;
    simple?: boolean;
}
